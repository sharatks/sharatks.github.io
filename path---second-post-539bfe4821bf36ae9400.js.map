{"version":3,"sources":["webpack:///path---second-post-539bfe4821bf36ae9400.js","webpack:///./.cache/json/second-post.json"],"names":["webpackJsonp","325","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+sIAAAC,aAAquIC,KAAA,eAAAC,MAAA,sBAAmDC","file":"path---second-post-539bfe4821bf36ae9400.js","sourcesContent":["webpackJsonp([26807536709107],{\n\n/***/ 325:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Summary</h2>\\n<blockquote>\\n<p>Designing a static website with the help of GatsbyJs, where the pages can be created with the help of different source of REST API, markdown etc. with graphQL to filter the data retrieving from the source. This card is all about learning GatsbyJs.</p>\\n</blockquote>\\n<h2>Motivation</h2>\\n<blockquote>\\n<p>Gatsby is very easy to learn and generate a fast static website. It loads HTML, CSS and JavaScript and rest of the data is loaded separately with the help of markdown, API etc. It makes website super fast and also provide support of generating a static page dynamically by loading a markdown files from the source directory. It helps designer to create the just the website leaving the content on content writer which makes the work easier and time saving.</p>\\n</blockquote>\\n<h2>Detailed design</h2>\\n<blockquote>\\n<p>Detailed design is mainly on the gatsbyJS.</p>\\n</blockquote>\\n<blockquote>\\n<p>It has mainly 2 directory, Layout and pages.</p>\\n<blockquote>\\n<p>Layout directory holds the  Index.js inside layout directory is loaded first where we initialize the title and metadata for the website along with the header or navigation which we prefer to remain same on all other pages.</p>\\n</blockquote>\\n</blockquote>\\n<blockquote>\\n<p>Layout page mainly contain all the pages in a website and these pages are loaded within the children tag inside layout.</p>\\n</blockquote>\\n<blockquote>\\n<p>Markdown - markdown files are created inside page directory with the date and title. (these pages act as a post and can have any naming convention) . before these pages load, they have to be fetched, which is done by the post.js inside template directory and which has to be registered in gatsby-node.js inside root directory. For fetching the data from the pages a plugin is required i.e 'gatsby-source-filesystem' and a transformation plugin to use graphQL.</p>\\n</blockquote>\\n<blockquote>\\n<p>graphQL - It is used to create query to for retrieving data and to filter it. </p>\\n</blockquote>\\n<blockquote>\\n<p>Metadata — gatsbyjs needs title/descriptions added via react-helmet to all the pages.</p>\\n</blockquote>\\n<blockquote>\\n<p>data with API work very similar to the react, which fetches the data from the server and can be displayed by binding to the tags.</p>\\n</blockquote>\\n<h2>How We Teach This</h2>\\n<blockquote>\\n<p>Working with markdown there is 'markdownRemark' is the tag which hold the all data inside markdown files. 'frontmatter' and html is meta data of 'markdownRemark', 'frontmatter' contains all the mata-detail provided inside the head section of the markdown files. and the html contain all the body.</p>\\n</blockquote>\\n<blockquote>\\n<p>'dangerouslySetInnerHTML' is a react tag for providing data inside the html tag, similar to the 'innerHTML' JavaScript notation.</p>\\n</blockquote>\\n<blockquote>\\n<p>routing with gastby is very simple just create the page inside the page directory and gatsby ll automatically register it, now only thing required is to call the page with 'Link' tag. (Link is used in gatsby instead of a tag in html and 'href' is replaced by 'to').</p>\\n</blockquote>\\n<blockquote>\\n<p>Learning Gatsby is simple and main challenge is to understand the GraphQL query.</p>\\n</blockquote>\\n<h2>Drawbacks</h2>\\n<blockquote>\\n<p>docs provided with outdated and they are going to updating it soon. The file structure shown in the document contain the JSX file format and the HTML.js tag loads first. which is entirely different compared to the current version. It is difficult to understand how the framework knows the the pages are stored inside page directory. The first file loaded is also bit different to ReactJs where an index.js file inside src fie is loaded.</p>\\n</blockquote>\\n<h2>Alternatives</h2>\\n<blockquote>\\n<p>An other alternative framework is jekyll which is a ruby based framework. Picking gatsbyjs on jekyll is mainly because of reactjs as most of the work we are doing is based on react. i.e reactJs for website, reactNative for mobile application.</p>\\n</blockquote>\\n<h2>Unresolved questions</h2>\\n<blockquote>\\n<p>How is index.js file inside layout directory is loaded first.</p>\\n</blockquote>\\n<blockquote>\\n<p>How it knows that the files are located inside page directory.</p>\\n</blockquote>\",\"frontmatter\":{\"path\":\"/second-post\",\"title\":\"Second Blog Post\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---second-post-539bfe4821bf36ae9400.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Summary</h2>\\n<blockquote>\\n<p>Designing a static website with the help of GatsbyJs, where the pages can be created with the help of different source of REST API, markdown etc. with graphQL to filter the data retrieving from the source. This card is all about learning GatsbyJs.</p>\\n</blockquote>\\n<h2>Motivation</h2>\\n<blockquote>\\n<p>Gatsby is very easy to learn and generate a fast static website. It loads HTML, CSS and JavaScript and rest of the data is loaded separately with the help of markdown, API etc. It makes website super fast and also provide support of generating a static page dynamically by loading a markdown files from the source directory. It helps designer to create the just the website leaving the content on content writer which makes the work easier and time saving.</p>\\n</blockquote>\\n<h2>Detailed design</h2>\\n<blockquote>\\n<p>Detailed design is mainly on the gatsbyJS.</p>\\n</blockquote>\\n<blockquote>\\n<p>It has mainly 2 directory, Layout and pages.</p>\\n<blockquote>\\n<p>Layout directory holds the  Index.js inside layout directory is loaded first where we initialize the title and metadata for the website along with the header or navigation which we prefer to remain same on all other pages.</p>\\n</blockquote>\\n</blockquote>\\n<blockquote>\\n<p>Layout page mainly contain all the pages in a website and these pages are loaded within the children tag inside layout.</p>\\n</blockquote>\\n<blockquote>\\n<p>Markdown - markdown files are created inside page directory with the date and title. (these pages act as a post and can have any naming convention) . before these pages load, they have to be fetched, which is done by the post.js inside template directory and which has to be registered in gatsby-node.js inside root directory. For fetching the data from the pages a plugin is required i.e 'gatsby-source-filesystem' and a transformation plugin to use graphQL.</p>\\n</blockquote>\\n<blockquote>\\n<p>graphQL - It is used to create query to for retrieving data and to filter it. </p>\\n</blockquote>\\n<blockquote>\\n<p>Metadata — gatsbyjs needs title/descriptions added via react-helmet to all the pages.</p>\\n</blockquote>\\n<blockquote>\\n<p>data with API work very similar to the react, which fetches the data from the server and can be displayed by binding to the tags.</p>\\n</blockquote>\\n<h2>How We Teach This</h2>\\n<blockquote>\\n<p>Working with markdown there is 'markdownRemark' is the tag which hold the all data inside markdown files. 'frontmatter' and html is meta data of 'markdownRemark', 'frontmatter' contains all the mata-detail provided inside the head section of the markdown files. and the html contain all the body.</p>\\n</blockquote>\\n<blockquote>\\n<p>'dangerouslySetInnerHTML' is a react tag for providing data inside the html tag, similar to the 'innerHTML' JavaScript notation.</p>\\n</blockquote>\\n<blockquote>\\n<p>routing with gastby is very simple just create the page inside the page directory and gatsby ll automatically register it, now only thing required is to call the page with 'Link' tag. (Link is used in gatsby instead of a tag in html and 'href' is replaced by 'to').</p>\\n</blockquote>\\n<blockquote>\\n<p>Learning Gatsby is simple and main challenge is to understand the GraphQL query.</p>\\n</blockquote>\\n<h2>Drawbacks</h2>\\n<blockquote>\\n<p>docs provided with outdated and they are going to updating it soon. The file structure shown in the document contain the JSX file format and the HTML.js tag loads first. which is entirely different compared to the current version. It is difficult to understand how the framework knows the the pages are stored inside page directory. The first file loaded is also bit different to ReactJs where an index.js file inside src fie is loaded.</p>\\n</blockquote>\\n<h2>Alternatives</h2>\\n<blockquote>\\n<p>An other alternative framework is jekyll which is a ruby based framework. Picking gatsbyjs on jekyll is mainly because of reactjs as most of the work we are doing is based on react. i.e reactJs for website, reactNative for mobile application.</p>\\n</blockquote>\\n<h2>Unresolved questions</h2>\\n<blockquote>\\n<p>How is index.js file inside layout directory is loaded first.</p>\\n</blockquote>\\n<blockquote>\\n<p>How it knows that the files are located inside page directory.</p>\\n</blockquote>\",\"frontmatter\":{\"path\":\"/second-post\",\"title\":\"Second Blog Post\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/second-post.json\n// module id = 325\n// module chunks = 26807536709107"],"sourceRoot":""}